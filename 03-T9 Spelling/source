import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Map;


public class Pro {
	private static String path = "F:\\match\\CodeJam\\03-T9 Spelling\\C-large-practice.in";//C-small-practice
	private static String path2 = "F:\\match\\CodeJam\\03-T9 Spelling\\C-large-practice-out.txt";
	static PrintWriter writer ;
	static Map<Character, Integer> KeyBorad = new HashMap<Character ,Integer>();
	static Map<Character, Integer> key_num = new HashMap<Character ,Integer>();
	private static String[] res2 = null;
	private static char[] letter ;
	
	public static void main(String[] args) {
		// TODO 自动生成的方法存根
		File f = new File(path);
		BufferedReader reader = null;
		try {
			reader = new BufferedReader(new FileReader(f));
			Init();
			int lines = Integer.parseInt(reader.readLine());
			int j =0 ;
			String context = "";
//			System.out.println(reader.readLine());
			Integer value = 0 ;
			res2 = new String[lines] ;
			while((context = reader.readLine())!=null) {
				letter = context.toCharArray();
				res2[j] = "Case #"+(j+1)+": " ;
				System.out.println("context "+j+" --: "+context);
				if(context!="")
				{
					for(int i=0;i<letter.length;i++){
					    value = KeyBorad.get(letter[i]);
						if (letter[i]==' ') {
							System.out.print("0");
							res2[j] += "0";
						}
						else {
							res2[j] += value.toString() ;
							System.out.print(value);
						}
						if(Judge(i)) {
							res2[j] += " " ;
							System.out.print(" ");
						}
					}
					System.out.println("");
					j++;
				}
			}
//			System.in.read();
			writeToFile(path2);
		} catch (IOException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
	}
	public static void Init() throws IOException {
		
		int i = 1;
		char key = 'a' ;
		int value = 1 ;
		while(i<27) {
			value++;
			if(key == 'p'|key=='w') {
				for (int j = 0; j < 4; j++) {
					System.out.println("key "+key+"  "+value);
					key_num.put(key, value) ;
					key++ ;
					i++;
				}
			} else {
				for (int j = 0; j < 3; j++) {
					System.out.println("key "+key+"  "+value);
					key_num.put(key, value) ;
					key++ ;
					i++;
				}
			}
		}
//		System.in.read();
		value = 1 ;
		key = 'a' ;
		i = 1 ;
		while(i<27) {
			value++;
			int temp = value ;
			if(key == 'p'|key=='w') {
				for(int j=0;j<4;j++){
//					System.out.println("key  :"+key+" value :"+value);
					KeyBorad.put(key, value);
					value = value*10+temp ;
					key += 1 ;
					i++;
				}
			}
			else {
				for(int j=0;j<3;j++){
//					System.out.println("key  :"+key+" value :"+value);
					KeyBorad.put(key, value);
					value = value*10+temp ;
					key += 1 ;
					i++;
				}
			}
			value = temp ;
		}
		KeyBorad.put('0', 0);
	}
	public static boolean Judge(int curpos) {
	    if(curpos<letter.length-1) {
	    	if(key_num.get(letter[curpos])==key_num.get(letter[curpos+1]))
		    	return true ;
	    }
	    return false ;
	}
	public static void writeToFile(String path){
		File file = new File(path);
		try {
			writer = new PrintWriter(new FileWriter(file));
			for (int i = 0; i < res2.length; i++) {
				writer.println(res2[i]);
			}
			writer.flush();
			writer.close();
		} catch (IOException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
	}
}
